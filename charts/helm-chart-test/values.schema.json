{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "http://example.com/example.json",
    "type": "object",
    "title": "IBM Certified Container Software for Sterling Secure Proxy - Perimeter Server JSON schema",
    "required": [
        "license",
        "licenseType",
        "image",
        "psArgs",
        "serviceAccount"
    ],
    "properties": {
        "license": {
            "$id": "#/properties/license",
            "type": "boolean",
            "title": "SSP - PS license acceptance",
            "description": "Please accept license after reading it at http://www-03.ibm.com/software/sla/sladb.nsf (L/N: L-BCHE-BXLMPM)",
            "default": false
        },
        "licenseType": {
            "$id": "#/properties/licenseType",
            "type": "string",
            "title": "License edition for IBM Certified Container Software for SSP - PS",
            "description": "Please provide the license type edition as either prod or non-prod for production or non-production respectively.",
            "default": "prod",
            "examples": [
			    "prod",
                "non-prod"
            ]
        },
		"nameOverride": {
            "$id": "#/properties/nameOverride",
            "type": "string",
            "title": "Name Override",
            "description": "This name will be appended to release name to form the name of the resources created by this chart.",
            "default": ""
        },
        "arch": {
            "$id": "#/properties/arch",
            "type": "string",
            "title": "Worker Node Architecture",
            "description": "Specify the worker node architecture where deployment would be done. The helm chart will try to detect the architecture based on the master node.",
            "default": "amd64",
            "examples": [
                "amd64"
            ]
        },
        "image": {
            "$id": "#/properties/image",
            "type": "object",
            "title": "Container Image Configuration",
            "default": {},            
            "required": [
                "repository",
                "tag",
                "imageSecrets",
                "pullPolicy"
            ],
            "properties": {
                "repository": {
                    "$id": "#/properties/image/properties/repository",
                    "type": "string",
                    "title": "PS Image Repository",
                    "description": "Specify the container image registry with image name",
                    "default": "cp.icr.io/cp/ibm-ssp-ps/ssp-ps-docker-image"
                },
                "tag": {
                    "$id": "#/properties/image/properties/tag",
                    "type": "string",
                    "title": "Image Tag",
                    "description": "Specify a valid image tag present on registry.",
                    "default": "6.0.2.0.03",
                    "examples": [
                        "6.0.2.0.03",
                        "6.0.2.0.02",
                        "6.0.2.0.01"
                    ]
                },
                "imageSecrets": {
                    "$id": "#/properties/image/properties/imageSecrets",
                    "type": "string",
                    "title": "Image Registry Secret",
                    "description": "Specify the secret to use when pulling the image. Please provide this when using an image from a private registry."
                },
                "pullPolicy": {
                    "$id": "#/properties/image/properties/pullPolicy",
                    "type": "string",
                    "title": "Image Pull Policy",
                    "description": "Specify the image pull policy for containers.",
                    "default": "IfNotPresent",
                    "examples": [
                        "IfNotPresent",
                        "Always",
                        "Never"
                    ]
                },
                "digest": {
                    "$id": "#/properties/image/properties/digest",
                    "type": "object",
                    "title": "Image Digest Details",
                    "default": {},                    
                    "required": [
                        "enabled",
                        "value"
                    ],
                    "properties": {
                        "enabled": {
                            "$id": "#/properties/image/properties/digest/properties/enabled",
                            "type": "boolean",
                            "title": "Digest Enablement",
                            "description": "Enable/disable digest to be used for image pull from registry.",
                            "default": false
                        },
                        "value": {
                            "$id": "#/properties/image/properties/digest/properties/value",
                            "type": "string",
                            "title": "Image Digest Value",
                            "description": "An explanation about the purpose of this instance.",
                            "default": "sha256:2d40a579be2ba880f7942f3705eefd1af7f7787fc3962773088dabe2d057401c"
                        }
                    }
                }
            }
        },
		"psArgs": {
            "$id": "#/properties/psArgs",
            "type": "object",
            "title": "PS Configuration Parameters",
			"default": {},
            "required": [
                "networkZoneSecure",
                "secureInterface",
                "externalInterface",
				"maxAllocation",
				"maxHeapSize",
				"restricted",
				"receiveBufferSize",
				"sendBufferSize",
				"logLevel",
				"rotateLogs",
				"maxnumLogs"
            ],
            "properties": {
                "networkZoneSecure": {
                    "$id": "#/properties/psArgs/properties/networkZoneSecure",
                    "type": "boolean",
                    "title": "Perimeter Server Type",
                    "description": "Check if you are installing more secure perimeter server else it will install less secure perimeter server.",
                    "default": false
                },
                "secureInterface": {
                    "$id": "#/properties/psArgs/properties/secureInterface",
                    "type": "string",
                    "title": "Secure Network Interface",
                    "description": "The perimeter server to use to communicate with the Secure Proxy engine.",
                    "default": "*"
                },
                "externalInterface": {
                    "$id": "#/properties/psArgs/properties/externalInterface",
                    "type": "string",
                    "title": "External Network Interface",
                    "description": "The perimeter server to use to communicate with the backend serve / trading partners",
                    "default": "*"
                },
                "remotePort": {
                    "$id": "#/properties/psArgs/properties/remotePort",
                    "type": "integer",
                    "title": "Remote Port",
                    "description": "The Secure Proxy engine will listen on for requests from the perimeter server and it is required if you are installing more secure PS.",
                    "default": 30900
                },
                "remoteAddress": {
                    "$id": "#/properties/psArgs/properties/remoteAddress",
                    "type": "string",
                    "title": "Remote HostName/IP Address",
                    "description": "The Secure Proxy engine host that will be connected to this perimeter server and it is required if you are installing more secure PS.",
                    "default": ""
                },
                "maxAllocation": {
                    "$id": "#/properties/psArgs/properties/maxAllocation",
                    "type": "integer",
                    "title": "Max Allocation",
                    "description": "Limits the amount of memory used for network buffers.",
                    "default": 768
                },
                "maxHeapSize": {
                    "$id": "#/properties/psArgs/properties/maxHeapSize",
                    "type": "integer",
                    "title": "JVM Heap Size",
                    "description": "JVM heap size, don't set more than container limit resource memory.",
                    "default": 1024
                },
                "restricted": {
                    "$id": "#/properties/psArgs/properties/restricted",
                    "type": "boolean",
                    "title": "Restricted",
                    "description": "check to enable restricted network access, controlled by restricted.policy and it is required if you are installing more secure PS.",
                    "default": false
                },
                "receiveBufferSize": {
                    "$id": "#/properties/psArgs/properties/receiveBufferSize",
                    "type": "integer",
                    "title": "Receive Buffer Size",
                    "description": "Socket receive buffer size for persistent connection.",
                    "default": 131072
                },
                "sendBufferSize": {
                    "$id": "#/properties/psArgs/properties/sendBufferSize",
                    "type": "integer",
                    "title": "Send Buffer Size",
                    "description": "Socket send buffer size for persistent connection.",
                    "default": 131072
                },
                "logLevel": {
                    "$id": "#/properties/psArgs/properties/logLevel",
                    "type": "string",
                    "title": "Log Level",
                    "description": "May have values of (ERROR,WARN,INFO,COMMTRACE,DEBUG or ALL).",
                    "default": "ERROR"
                },
                "rotateLogs": {
                    "$id": "#/properties/psArgs/properties/rotateLogs",
                    "type": "Rotation Log",
                    "title": "More Secure PS - Remote Port",
                    "description": "Enables log rotation when maxLogSize is reached.",
                    "default": true
                },
                "maxLogSize": {
                    "$id": "#/properties/psArgs/properties/maxLogSize",
                    "type": "integer",
                    "title": "Max Log Size",
                    "description": "Log output will roll over when this many records have been written.",
                    "default": 100000
                },
                "maxnumLogs": {
                    "$id": "#/properties/psArgs/properties/maxnumLogs",
                    "type": "integer",
                    "title": "Maximum Log Files",
                    "description": "After this many logs are written, old logs will be deleted.",
                    "default": 10
                }
            }
        },
        "service": {
            "$id": "#/properties/service",
            "type": "object",
            "title": "Service Configuration",
            "default": {},
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "$id": "#/properties/service/properties/type",
                    "type": "string",
                    "title": "Service Type",
                    "description": "Specify the service type to be used to expose the Engine application.",
                    "default": "LoadBalancer",
                    "examples": [
                        "LoadBalancer",
						"NodePort",
                        "ClusterIP"						
                    ]
                },
                "loadBalancerIP": {
                    "$id": "#/properties/service/properties/loadBalancerIP",
                    "type": "string",
                    "title": "Static Load Balancer IP",
                    "description": "Specify a valid static Load Balancer IP, if available to access the Engine application.",
                    "default": ""
                },
                "externalIP": {
                    "$id": "#/properties/service/properties/externalIP",
                    "type": "string",
                    "title": "ExternalIP for Service",
                    "description": "Specify the External IP to access the Engine application.",
                    "default": ""
                },
                "annotations": {
                    "$id": "#/properties/service/properties/annotations",
                    "type": "object",
                    "title": "Service Annotations",
                    "description": "Specify the Service annotations if needed.",
                    "default": {},
                    "additionalProperties": true
                },
                "externalTrafficPolicy": {
                    "$id": "#/properties/service/properties/externalTrafficPolicy",
                    "type": "string",
                    "title": "External Traffic Policy",
                    "description": "Specify the external traffic policy if needed.",
                    "default": ""
                },
                "sessionAffinity": {
                    "$id": "#/properties/service/properties/sessionAffinity",
                    "type": "string",
                    "title": "Session Affinity",
                    "description": "Specify the session affinity.",
                    "default": "ClientIP"
                },
                "psLessSecure": {
                    "$id": "#/properties/service/properties/psLessSecure",
                    "type": "object",
                    "title": "PS Less Secure Port",
                    "default": {},
                    "required": [
                        "servicePort",
                        "containerPort"
                    ],
                    "properties": {
                        "servicePort": {
                            "$id": "#/properties/service/properties/psLessSecure/properties/servicePort",
                            "type": "integer",
                            "title": "Service Port",
                            "description": "Specify the PS less secure port number.",
                            "default": 30800
                        },
                        "containerPort": {
                            "$id": "#/properties/service/properties/psLessSecure/properties/containerPort",
                            "type": "integer",
                            "title": "Container Port",
                            "description": "Specify the PS less secure container port number and do not change this number if not needed.",
                            "default": 30800
                        }
                    }
                }
            }
        },
		"service2": {
            "$id": "#/properties/service2",
            "type": "object",
            "title": "Adapter Service Configuration",
            "default": {},
            "properties": {
                "type": {
                    "$id": "#/properties/service2/properties/type",
                    "type": "string",
                    "title": "Service Type",
                    "description": "Specify the service type to be used to expose the adapters.",
                    "default": "LoadBalancer",
                    "examples": [
                        "LoadBalancer",
						"NodePort",
                        "ClusterIP"						
                    ]
                },
                "loadBalancerIP": {
                    "$id": "#/properties/service2/properties/loadBalancerIP",
                    "type": "string",
                    "title": "Static Load Balancer IP",
                    "description": "Specify a valid static Load Balancer IP, if available to access the adapters.",
                    "default": ""
                },
                "externalIP": {
                    "$id": "#/properties/service2/properties/externalIP",
                    "type": "string",
                    "title": "ExternalIP for Service",
                    "description": "Specify the External IP to access the adapters.",
                    "default": ""
                },
                "annotations": {
                    "$id": "#/properties/service2/properties/annotations",
                    "type": "object",
                    "title": "Service Annotations",
                    "description": "Specify the Service annotations if needed.",
                    "default": {},
                    "additionalProperties": true
                },
                "externalTrafficPolicy": {
                    "$id": "#/properties/service2/properties/externalTrafficPolicy",
                    "type": "string",
                    "title": "External Traffic Policy",
                    "description": "Specify the external traffic policy if needed.",
                    "default": ""
                },
                "sessionAffinity": {
                    "$id": "#/properties/service2/properties/sessionAffinity",
                    "type": "string",
                    "title": "Session Affinity",
                    "description": "Specify the session affinity.",
                    "default": "ClientIP"
                },
                "portRanges": {
                    "$id": "#/properties/service2/properties/portRanges",
                    "type": "array",
                    "title": "Adapter Ports Range",
					"description": "Expose adapter ports in range format.",
                    "default": [],
                    "items": {
                        "$id": "#/properties/service2/properties/portRanges/items",
                        "type": "object",
						"properties": {
							"name": { 
							   "type": "string",
							   "title": "Adapter Name",
                               "description": "Specify the adapter name."							
							},
							"portRange": { 
							   "type": "string",
							   "title": "Service Port Range",
                               "description": "Specify the service port range like 30101-30110." 
							},
							"nodePortRange": {
							   "type": "string",
							   "title": "Node Port Range ",
                               "description": "Specify the Node Port range if needed like 30101-30110."
							}
						},
                        "additionalItems": true
                    }
                },
				"ports": {
                    "$id": "#/properties/service2/properties/ports",
                    "type": "array",
                    "title": "Adapter Ports",
					"description": "Expose adapter ports one by one.",
                    "default": [],
                    "items": {
                        "$id": "#/properties/service2/properties/ports/items",
                        "type": "object",
						"properties": {
							"name": { 
							   "type": "string",
							   "title": "Adapter Name",
                               "description": "Specify the name name"							
							},
							"portRange": { 
							   "type": "integer",
							   "title": "Service Port",
                               "description": "Specify the service port." 
							},
							"nodePortRange": {
							   "type": "integer",
							   "title": "Node Port",
                               "description": "Specify the Node Port if needed."
							}
						},
                        "additionalItems": true
                    }
                }
            }
        },
        "serviceAccount": {
            "$id": "#/properties/serviceAccount",
            "type": "object",
            "title": "Service Account Configuration",
            "default": {},
            "required": [
                "create"
            ],
            "properties": {
                "create": {
                    "$id": "#/properties/serviceAccount/properties/create",
                    "type": "boolean",
                    "title": "Service Account Create",
                    "description": "UnCheck if you want to use existing service account.",
                    "default": true
                },
                "name": {
                    "$id": "#/properties/serviceAccount/properties/name",
                    "type": "string",
                    "title": "Service Account Name",
                    "description": "Specify service account name if existing service account is to be use for this deployment.",
                    "default": ""
                }
            }
        },
		"resources": {
            "$id": "#/properties/resources",
            "type": "object",
            "title": "Resource Configuration",
            "default": {},
            "required": [
                "limits",
                "requests"
            ],
            "properties": {
                "limits": {
                    "$id": "#/properties/resources/properties/limits",
                    "type": "object",
                    "title": "Resource Limits",
                    "default": {},
                    "required": [
                        "cpu",
                        "memory"
                    ],
                    "properties": {
                        "cpu": {
                            "$id": "#/properties/resources/properties/limits/properties/cpu",
                            "type": "string",
                            "title": "CPU Limit",
                            "description": "The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 1000m, where 1000m is equivalent to 1 core).",
                            "default": "1000m"
                        },
                        "memory": {
                            "$id": "#/properties/resources/properties/limits/properties/memory",
                            "type": "string",
                            "title": "Memory Limit",
                            "description": "The memory upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
                            "default": "1Gi"
                        }
                    }
                },
                "requests": {
                    "$id": "#/properties/resources/properties/requests",
                    "type": "object",
                    "title": "Request Limits",
                    "default": {},
                    "required": [
                        "cpu",
                        "memory"
                    ],
                    "properties": {
                        "cpu": {
                            "$id": "#/properties/resources/properties/requests/properties/cpu",
                            "type": "string",
                            "title": "CPU Request",
                            "description": "The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 1000m, where 1000m is equivalent to 1 core).",
                            "default": "1000m"
                        },
                        "memory": {
                            "$id": "#/properties/resources/properties/requests/properties/memory",
                            "type": "string",
                            "title": "Memory Request",
                            "description": "The memory upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
                            "default": "1Gi"
                        }
                    }
               }
            }
        },
		"affinity": {
            "$id": "#/properties/affinity",
            "type": "object",
            "title": "Affinity Configuration",
            "default": {},
            "required": [
                "nodeAffinity"
            ],
            "properties": {
                "nodeAffinity": {
                    "$id": "#/properties/affinity/properties/nodeAffinity",
                    "type": "object",
                    "title": "Node Affinity",
                    "default": {},
                    "required": [
                        "requiredDuringSchedulingIgnoredDuringExecution",
                        "preferredDuringSchedulingIgnoredDuringExecution"
                    ],
                    "properties": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "$id": "#/properties/affinity/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
                            "type": "array",
                            "title": "Node Affinity RequiredDuringSchedulingIgnoredDuringExecution",
                            "description": "Specify in accordance with k8s PodSpec.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution",
                            "default": [],
                            "additionalItems": true,
                            "items": {
                                "$id": "#/properties/affinity/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object",
				                "additionalItems": true
                            }
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                            "$id": "#/properties/affinity/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
                            "type": "array",
                            "title": "Node Affinity PreferredDuringSchedulingIgnoredDuringExecution",
                            "description": "Specify in accordance with k8s PodSpec.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution",
                            "default": [],
                            "additionalItems": true,
                            "items": {
                                "$id": "#/properties/affinity/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object",
				                "additionalItems": true
                            }
                        }
                    }
                },
                "podAffinity": {
                    "$id": "#/properties/affinity/properties/podAffinity",
                    "type": "object",
                    "title": "Pod Affinity",
                    "default": {},
                    "required": [
                        "requiredDuringSchedulingIgnoredDuringExecution",
                        "preferredDuringSchedulingIgnoredDuringExecution"
                    ],
                    "properties": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "$id": "#/properties/affinity/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
                            "type": "array",
                            "title": "Pod Affinity RequiredDuringSchedulingIgnoredDuringExecution",
                            "description": "Specify in accordance with k8s PodSpec.podAffinity.requiredDuringSchedulingIgnoredDuringExecution",
                            "default": [],
                            "additionalItems": true,
                            "items": {
                                "$id": "#/properties/affinity/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object",
				                "additionalItems": true
                            }
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                            "$id": "#/properties/affinity/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
                            "type": "array",
                            "title": "Pod Affinity PreferredDuringSchedulingIgnoredDuringExecution",
                            "description": "Specify in accordance with k8s PodSpec.podAffinity.preferredDuringSchedulingIgnoredDuringExecution",
                            "default": [],
                            "additionalItems": true,
                            "items": {
                                "$id": "#/properties/affinity/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object",
				                "additionalItems": true
                            }
                        }
                    }
                },
                "podAntiAffinity": {
                    "$id": "#/properties/affinity/properties/podAntiAffinity",
                    "type": "object",
                    "title": "Pod Anti-Affinity",
                    "default": {},
                    "required": [
                        "requiredDuringSchedulingIgnoredDuringExecution",
                        "preferredDuringSchedulingIgnoredDuringExecution"
                    ],
                    "properties": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "$id": "#/properties/affinity/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
                            "type": "array",
                            "title": "Pod Anti-Affinity RequiredDuringSchedulingIgnoredDuringExecution",
                            "description": "Specify in accordance with k8s PodSpec.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution",
                            "default": [],
                            "additionalItems": true,
                            "items": {
                                "$id": "#/properties/affinity/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object",
				                "additionalItems": true
                            }
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                            "$id": "#/properties/affinity/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
                            "type": "array",
                            "title": "Pod Anti-Affinity PreferredDuringSchedulingIgnoredDuringExecution",
                            "description": "Specify in accordance with k8s PodSpec.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution",
                            "default": [],
                            "additionalItems": true,
                            "items": {
                                "$id": "#/properties/affinity/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object",
				                "additionalItems": true
                            }
                        }
                    }
                }
            }
        },
		"livenessProbe": {
            "$id": "#/properties/livenessProbe",
            "type": "object",
            "title": "Liveness Probe Configuration",
            "required": [
                "initialDelaySeconds",
                "timeoutSeconds",
                "periodSeconds",
				"failureThreshold"
            ],
            "properties": {
                "initialDelaySeconds": {
                    "$id": "#/properties/livenessProbe/properties/initialDelaySeconds",
                    "type": "integer",
                    "title": "Initial Delay",
                    "description": "Specify the initial delay in starting liveness probe in seconds",
                    "default": 150
                },
                "timeoutSeconds": {
                    "$id": "#/properties/livenessProbe/properties/timeoutSeconds",
                    "type": "integer",
                    "title": "Timeout",
                    "description": "Specify the probe timeout in seconds",
                    "default": 30
                },
                "periodSeconds": {
                    "$id": "#/properties/livenessProbe/properties/periodSeconds",
                    "type": "integer",
                    "title": "Period",
                    "description": "Specify the time period between two probes in seconds",
                    "default": 60
                },
				"failureThreshold": {
                    "$id": "#/properties/livenessProbe/properties/failureThreshold",
                    "type": "integer",
                    "title": "Failure Threshold",
                    "description": "Specify the failure threshold count.",
                    "default": 10
                }
            }
        },
        "readinessProbe": {
            "$id": "#/properties/readinessProbe",
            "type": "object",
            "title": "Readiness Probe Configuration",
            "required": [
                "initialDelaySeconds",
                "timeoutSeconds",
                "periodSeconds",
				"failureThreshold"
            ],
            "properties": {
                "initialDelaySeconds": {
                    "$id": "#/properties/readinessProbe/properties/initialDelaySeconds",
                    "type": "integer",
                    "title": "Initial Delay",
                    "description": "Specify the initial delay in starting readiness probe in seconds.",
                    "default": 140
                },
                "timeoutSeconds": {
                    "$id": "#/properties/readinessProbe/properties/timeoutSeconds",
                    "type": "integer",
                    "title": "Timeout",
                    "description": "Specify the probe timeout in seconds.",
                    "default": 5
                },
                "periodSeconds": {
                    "$id": "#/properties/readinessProbe/properties/periodSeconds",
                    "type": "integer",
                    "title": "Time Period",
                    "description": "Specify the time period between two probes in seconds.",
                    "default": 60
                },
				"failureThreshold": {
                    "$id": "#/properties/livenessProbe/properties/failureThreshold",
                    "type": "integer",
                    "title": "Failure Threshold",
                    "description": "Specify the failure threshold count.",
                    "default": 10
                }
            }
        },
        "route": {
            "$id": "#/properties/route",
            "type": "object",
            "title": "OpenShift Route Configuration",
            "required": [
                "enabled"
            ],
            "properties": {
                "enabled": {
                    "$id": "#/properties/route/properties/enabled",
                    "type": "boolean",
                    "title": "Enable/Disable OpenShift Route",
                    "description": "Check if you want to enable OpenShift route creation.",
                    "default": false
                }
            }
        },
        "dashboard": {
            "$id": "#/properties/dashboard",
            "type": "object",
            "title": "Dashboard Monitoring",
            "properties": {
                "enabled": {
                    "$id": "#/properties/dashboard/properties/enabled",
                    "type": "boolean",
                    "title": "Enable/Disable Dashboard",
                    "description": "Enable/Disable dashboard monitoring",
                    "default": false
                }
            }
        },
		"networkPolicy": {
            "$id": "#/properties/networkPolicy",
            "type": "object",
            "title": "Network Policy Configuration",        
            "default": {},
            "required": [
                "policyTypes"               
            ],
            "properties": {
                "policyTypes": {
                    "$id": "#/properties/networkPolicy/properties/policyTypes",
                    "type": "array",
                    "title": "Policy Type",
                    "description": "Specify the policy type.",
					"additionalItems": false,
					"items": {
                        "$id": "#/properties/networkPolicy/properties/policyTypes/items",
                        "type": "string"
                    }
                },
                "ingress": {
                    "$id": "#/properties/networkPolicy/properties/ingress",
                    "type": "array",
                    "title": "Ingress Configure",
                    "description": "Specify the ingress configuration",
                    "items": {
                        "$id": "#/properties/networkPolicy/properties/ingress/items",
                        "type": "object",
                        "additionalItems": true
                    }
                },
                "egress": {
					"$id": "#/properties/networkPolicy/properties/egress",
					"type": "array",
					"title": "Egress Configure",
					"description": "Specify the egress configuration",
					"items": {
						"$id": "#/properties/networkPolicy/properties/egress/items",
						"type": "object",
						"additionalItems": true
					}
				}
			}
		}
     },
	 "additionalProperties": true
 }