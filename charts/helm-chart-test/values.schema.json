{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "http://example.com/example.json",
    "type": "object",
    "title": "Test JSON schema",
    "required": [
        "license",
        "image",
        "serviceAccount"
    ],
    "properties": {
        "license": {
            "$id": "#/properties/license",
            "type": "boolean",
            "title": "License acceptance",
            "description": "Please accept license after reading it https://github.com/durgeshsingh2065/helm-repo",
            "default": false
        },
        "image": {
            "$id": "#/properties/image",
            "type": "object",
            "title": "Container Image Configuration",
            "default": {},            
            "required": [
                "repository",
                "tag",
                "imageSecrets",
                "pullPolicy"
            ],
            "properties": {
                "repository": {
                    "$id": "#/properties/image/properties/repository",
                    "type": "string",
                    "title": "Image Repository",
                    "description": "Specify the container image registry with image name",
                    "default": "durgesh/api"
                },
                "tag": {
                    "$id": "#/properties/image/properties/tag",
                    "type": "string",
                    "title": "Image Tag",
                    "description": "Specify a valid image tag present on registry.",
                    "default": "1.0"
                },
                "imageSecrets": {
                    "$id": "#/properties/image/properties/imageSecrets",
                    "type": "string",
                    "title": "Image Registry Secret",
                    "description": "Specify the secret to use when pulling the image. Please provide this when using an image from a private registry."
                },
                "pullPolicy": {
                    "$id": "#/properties/image/properties/pullPolicy",
                    "type": "string",
                    "title": "Image Pull Policy",
                    "description": "Specify the image pull policy for containers.",
                    "default": "IfNotPresent",
                    "examples": [
                        "IfNotPresent",
                        "Always",
                        "Never"
                    ]
                },
                "digest": {
                    "$id": "#/properties/image/properties/digest",
                    "type": "object",
                    "title": "Image Digest Details",
                    "default": {},                    
                    "required": [
                        "enabled",
                        "value"
                    ],
                    "properties": {
                        "enabled": {
                            "$id": "#/properties/image/properties/digest/properties/enabled",
                            "type": "boolean",
                            "title": "Digest Enablement",
                            "description": "Enable/disable digest to be used for image pull from registry.",
                            "default": false
                        },
                        "value": {
                            "$id": "#/properties/image/properties/digest/properties/value",
                            "type": "string",
                            "title": "Image Digest Value",
                            "description": "Specify the image digest value.",
                            "default": "sha256:0bc104d06"
                        }
                    }
                }
            }
        },
		"persistentVolume": {
            "$id": "#/properties/persistentVolume",
            "type": "object",
            "title": "PV and PVC Configuration",
            "default": {},
            "required": [
                "enabled",
                "useDynamicProvisioning",
                "size",
                "accessMode"
            ],
            "properties": {
                "enabled": {
                    "$id": "#/properties/persistentVolume/properties/enabled",
                    "type": "boolean",
                    "title": "Enable/Disable Persistence",
                    "description": "This parameters governs if persistence storage is required or not. Currenty, disabling this parameter is not supported.",
                    "default": true
                },
                "useDynamicProvisioning": {
                    "$id": "#/properties/persistentVolume/properties/useDynamicProvisioning",
                    "type": "boolean",
                    "title": "Enable/Disable Dynamic Provisioning",
                    "description": "This parameter governs the enabling disabling of dynamic provisioning in container using storage class.",
                    "default": false
                },
                "existingClaimName": {
                    "$id": "#/properties/persistentVolume/properties/existingClaimName",
                    "type": "string",
                    "title": "Existing Persistent Volume Claim",
                    "description": "Specify the existing persistent Volume claim name to be used for data persistence.",
                    "default": ""
                },
                "labelName": {
                    "$id": "#/properties/persistentVolume/properties/labelName",
                    "type": "string",
                    "title": "Label Name",
                    "description": "Specify the label name for manually created persistent volume resource to be used for this deployment.",
                    "default": "app.kubernetes.io/name"
                },
                "labelValue": {
                    "$id": "#/properties/persistentVolume/properties/labelValue",
                    "type": "string",
                    "title": "Label Value",
                    "description": "Specify the label value for manually created persistent volume resource to be used for this deployment.",
                    "default": "durgesh-pv"
                },
                "storageClassName": {
                    "$id": "#/properties/persistentVolume/properties/storageClassName",
                    "type": "string",
                    "title": "Storage Class Name",
                    "description": "Specify the Storage Class name for dynamic provisioning for data persistence.",
                    "default": "manual"
                },
                "size": {
                    "$id": "#/properties/persistentVolume/properties/size",
                    "type": "string",
                    "title": "Persistent Volume Claim Size",
                    "description": "Specify the claim size to be used for this deployment. Please note that this is minimum requirement for deployment.",
                    "default": "2Gi"
                },
                "accessMode": {
                    "$id": "#/properties/persistentVolume/properties/accessMode",
                    "type": "string",
                    "title": "Access Mode for Persistent Volume Claim",
                    "description": "Specify the access mode for data persistence. Currently, only ReadWriteOnce is supported.",
                    "default": "ReadWriteOnce",
                    "examples": [
                        "ReadWriteOnce"
                    ]
                }
            }
        },
		"storageSecurity": {
            "$id": "#/properties/storageSecurity",
            "type": "object",
            "title": "File System GID - Container Supplemental Group",
            "default": {},
            "properties": {
                "supplementalGroupId": {
                    "$id": "#/properties/storageSecurity/properties/supplementalGroupId",
                    "type": "string",
                    "title": "Container Supplemental Group ID",
                    "description": "Specify the file system group ID for persistent volume.",
                    "default": ""
                }
            }
        },
		"service": {
            "$id": "#/properties/service",
            "type": "object",
            "title": "Service Configuration",
            "default": {},
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "$id": "#/properties/service/properties/type",
                    "type": "string",
                    "title": "Service Type",
                    "description": "Specify the service type to be used to expose the Engine application.",
                    "default": "LoadBalancer",
                    "examples": [
                        "LoadBalancer",
						"NodePort",
                        "ClusterIP"						
                    ]
                },
                "loadBalancerIP": {
                    "$id": "#/properties/service/properties/loadBalancerIP",
                    "type": "string",
                    "title": "Static Load Balancer IP",
                    "description": "Specify a valid static Load Balancer IP, if available to access the Engine application.",
                    "default": ""
                },
                "externalIP": {
                    "$id": "#/properties/service/properties/externalIP",
                    "type": "string",
                    "title": "ExternalIP for Service",
                    "description": "Specify the External IP to access the Engine application.",
                    "default": ""
                },
                "annotations": {
                    "$id": "#/properties/service/properties/annotations",
                    "type": "object",
                    "title": "Service Annotations",
                    "description": "Specify the Service annotations if needed.",
                    "default": {},
                    "additionalProperties": true
                },
                "externalTrafficPolicy": {
                    "$id": "#/properties/service/properties/externalTrafficPolicy",
                    "type": "string",
                    "title": "External Traffic Policy",
                    "description": "Specify the external traffic policy if needed.",
                    "default": ""
                },
                "sessionAffinity": {
                    "$id": "#/properties/service/properties/sessionAffinity",
                    "type": "string",
                    "title": "Session Affinity",
                    "description": "Specify the session affinity.",
                    "default": "ClientIP"
                },
                "port": {
                    "$id": "#/properties/service/properties/port",
                    "type": "object",
                    "title": "Port",
                    "default": {},
                    "required": [
                        "servicePort",
                        "containerPort"
                    ],
                    "properties": {
                        "servicePort": {
                            "$id": "#/properties/service/properties/port/properties/servicePort",
                            "type": "integer",
                            "title": "Service Port",
                            "description": "Specify port number.",
                            "default": 61365
                        },
                        "containerPort": {
                            "$id": "#/properties/service/properties/port/properties/containerPort",
                            "type": "integer",
                            "title": "Container Port",
                            "description": "Specify the container port number and do not change this number if not needed.",
                            "default": 61365
                        }
                    }
                }
            }
        },
		"secret": {
            "$id": "#/properties/secret",
            "type": "object",
            "title": "Secret Configuration",
            "default": {},
            "required": [
                "secretName"
            ],
            "properties": {
                "secretName": {
                    "$id": "#/properties/secret/properties/secretName",
                    "type": "string",
                    "title": "Secret Name",
                    "description": "Specify the secret name.",
                    "default": ""
                }
            }
        },
        "serviceAccount": {
            "$id": "#/properties/serviceAccount",
            "type": "object",
            "title": "Service Account Configuration",
            "default": {},
            "required": [
                "create"
            ],
            "properties": {
                "create": {
                    "$id": "#/properties/serviceAccount/properties/create",
                    "type": "boolean",
                    "title": "Service Account Create",
                    "description": "UnCheck if you want to use existing service account.",
                    "default": true
                },
                "name": {
                    "$id": "#/properties/serviceAccount/properties/name",
                    "type": "string",
                    "title": "Service Account Name",
                    "description": "Specify service account name if existing service account is to be use for this deployment.",
                    "default": ""
                }
            }
        },
		"resources": {
            "$id": "#/properties/resources",
            "type": "object",
            "title": "Resource Configuration",
            "default": {},
            "required": [
                "limits",
                "requests"
            ],
            "properties": {
                "limits": {
                    "$id": "#/properties/resources/properties/limits",
                    "type": "object",
                    "title": "Resource Limits",
                    "default": {},
                    "required": [
                        "cpu",
                        "memory"
                    ],
                    "properties": {
                        "cpu": {
                            "$id": "#/properties/resources/properties/limits/properties/cpu",
                            "type": "string",
                            "title": "CPU Limit",
                            "description": "The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 1000m, where 1000m is equivalent to 1 core).",
                            "default": "1000m"
                        },
                        "memory": {
                            "$id": "#/properties/resources/properties/limits/properties/memory",
                            "type": "string",
                            "title": "Memory Limit",
                            "description": "The memory upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
                            "default": "1Gi"
                        }
                    }
                },
                "requests": {
                    "$id": "#/properties/resources/properties/requests",
                    "type": "object",
                    "title": "Request Limits",
                    "default": {},
                    "required": [
                        "cpu",
                        "memory"
                    ],
                    "properties": {
                        "cpu": {
                            "$id": "#/properties/resources/properties/requests/properties/cpu",
                            "type": "string",
                            "title": "CPU Request",
                            "description": "The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 1000m, where 1000m is equivalent to 1 core).",
                            "default": "1000m"
                        },
                        "memory": {
                            "$id": "#/properties/resources/properties/requests/properties/memory",
                            "type": "string",
                            "title": "Memory Request",
                            "description": "The memory upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.",
                            "default": "1Gi"
                        }
                    }
               }
            }
        },
		"affinity": {
            "$id": "#/properties/affinity",
            "type": "object",
            "title": "Affinity Configuration",
            "default": {},
            "required": [
                "nodeAffinity"
            ],
            "properties": {
                "nodeAffinity": {
                    "$id": "#/properties/affinity/properties/nodeAffinity",
                    "type": "object",
                    "title": "Node Affinity",
                    "default": {},
                    "required": [
                        "requiredDuringSchedulingIgnoredDuringExecution",
                        "preferredDuringSchedulingIgnoredDuringExecution"
                    ],
                    "properties": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "$id": "#/properties/affinity/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
                            "type": "array",
                            "title": "Node Affinity RequiredDuringSchedulingIgnoredDuringExecution",
                            "description": "Specify in accordance with k8s PodSpec.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution",
                            "default": [],
                            "additionalItems": true,
                            "items": {
                                "$id": "#/properties/affinity/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object",
				                "additionalItems": true
                            }
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                            "$id": "#/properties/affinity/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
                            "type": "array",
                            "title": "Node Affinity PreferredDuringSchedulingIgnoredDuringExecution",
                            "description": "Specify in accordance with k8s PodSpec.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution",
                            "default": [],
                            "additionalItems": true,
                            "items": {
                                "$id": "#/properties/affinity/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object",
				                "additionalItems": true
                            }
                        }
                    }
                },
                "podAffinity": {
                    "$id": "#/properties/affinity/properties/podAffinity",
                    "type": "object",
                    "title": "Pod Affinity",
                    "default": {},
                    "required": [
                        "requiredDuringSchedulingIgnoredDuringExecution",
                        "preferredDuringSchedulingIgnoredDuringExecution"
                    ],
                    "properties": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "$id": "#/properties/affinity/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
                            "type": "array",
                            "title": "Pod Affinity RequiredDuringSchedulingIgnoredDuringExecution",
                            "description": "Specify in accordance with k8s PodSpec.podAffinity.requiredDuringSchedulingIgnoredDuringExecution",
                            "default": [],
                            "additionalItems": true,
                            "items": {
                                "$id": "#/properties/affinity/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object",
				                "additionalItems": true
                            }
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                            "$id": "#/properties/affinity/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
                            "type": "array",
                            "title": "Pod Affinity PreferredDuringSchedulingIgnoredDuringExecution",
                            "description": "Specify in accordance with k8s PodSpec.podAffinity.preferredDuringSchedulingIgnoredDuringExecution",
                            "default": [],
                            "additionalItems": true,
                            "items": {
                                "$id": "#/properties/affinity/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object",
				                "additionalItems": true
                            }
                        }
                    }
                },
                "podAntiAffinity": {
                    "$id": "#/properties/affinity/properties/podAntiAffinity",
                    "type": "object",
                    "title": "Pod Anti-Affinity",
                    "default": {},
                    "required": [
                        "requiredDuringSchedulingIgnoredDuringExecution",
                        "preferredDuringSchedulingIgnoredDuringExecution"
                    ],
                    "properties": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "$id": "#/properties/affinity/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
                            "type": "array",
                            "title": "Pod Anti-Affinity RequiredDuringSchedulingIgnoredDuringExecution",
                            "description": "Specify in accordance with k8s PodSpec.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution",
                            "default": [],
                            "additionalItems": true,
                            "items": {
                                "$id": "#/properties/affinity/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object",
				                "additionalItems": true
                            }
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                            "$id": "#/properties/affinity/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
                            "type": "array",
                            "title": "Pod Anti-Affinity PreferredDuringSchedulingIgnoredDuringExecution",
                            "description": "Specify in accordance with k8s PodSpec.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution",
                            "default": [],
                            "additionalItems": true,
                            "items": {
                                "$id": "#/properties/affinity/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
								"type": "object",
				                "additionalItems": true
                            }
                        }
                    }
                }
            }
        },
		"livenessProbe": {
            "$id": "#/properties/livenessProbe",
            "type": "object",
            "title": "Liveness Probe Configuration",
            "required": [
                "initialDelaySeconds",
                "timeoutSeconds",
                "periodSeconds",
				"failureThreshold"
            ],
            "properties": {
                "initialDelaySeconds": {
                    "$id": "#/properties/livenessProbe/properties/initialDelaySeconds",
                    "type": "integer",
                    "title": "Initial Delay",
                    "description": "Specify the initial delay in starting liveness probe in seconds",
                    "default": 10
                },
                "timeoutSeconds": {
                    "$id": "#/properties/livenessProbe/properties/timeoutSeconds",
                    "type": "integer",
                    "title": "Timeout",
                    "description": "Specify the probe timeout in seconds",
                    "default": 30
                },
                "periodSeconds": {
                    "$id": "#/properties/livenessProbe/properties/periodSeconds",
                    "type": "integer",
                    "title": "Period",
                    "description": "Specify the time period between two probes in seconds",
                    "default": 60
                },
				"failureThreshold": {
                    "$id": "#/properties/livenessProbe/properties/failureThreshold",
                    "type": "integer",
                    "title": "Failure Threshold",
                    "description": "Specify the failure threshold count.",
                    "default": 10
                }
            }
        },
        "readinessProbe": {
            "$id": "#/properties/readinessProbe",
            "type": "object",
            "title": "Readiness Probe Configuration",
            "required": [
                "initialDelaySeconds",
                "timeoutSeconds",
                "periodSeconds",
				"failureThreshold"
            ],
            "properties": {
                "initialDelaySeconds": {
                    "$id": "#/properties/readinessProbe/properties/initialDelaySeconds",
                    "type": "integer",
                    "title": "Initial Delay",
                    "description": "Specify the initial delay in starting readiness probe in seconds.",
                    "default": 8
                },
                "timeoutSeconds": {
                    "$id": "#/properties/readinessProbe/properties/timeoutSeconds",
                    "type": "integer",
                    "title": "Timeout",
                    "description": "Specify the probe timeout in seconds.",
                    "default": 5
                },
                "periodSeconds": {
                    "$id": "#/properties/readinessProbe/properties/periodSeconds",
                    "type": "integer",
                    "title": "Time Period",
                    "description": "Specify the time period between two probes in seconds.",
                    "default": 30
                },
				"failureThreshold": {
                    "$id": "#/properties/livenessProbe/properties/failureThreshold",
                    "type": "integer",
                    "title": "Failure Threshold",
                    "description": "Specify the failure threshold count.",
                    "default": 10
                }
            }
        },
        "route": {
            "$id": "#/properties/route",
            "type": "object",
            "title": "OpenShift Route Configuration",
            "required": [
                "enabled"
            ],
            "properties": {
                "enabled": {
                    "$id": "#/properties/route/properties/enabled",
                    "type": "boolean",
                    "title": "Enable/Disable OpenShift Route",
                    "description": "Check if you want to enable OpenShift route creation.",
                    "default": false
                }
            }
        },
        "vmArguments": {
            "$id": "#/properties/vmArguments",
            "type": "array",
            "title": "VM Argument Configuration",
            "description": "Specify VM arguments. For Example Dvalidate=true",
            "items": {
				"$id": "#/properties/vmArguments/items",
				"type": "string",
				"additionalItems": true
			}
        },
		"networkPolicy": {
            "$id": "#/properties/networkPolicy",
            "type": "object",
            "title": "Network Policy Configuration",        
            "default": {},
            "required": [
                "policyTypes"               
            ],
            "properties": {
                "policyTypes": {
                    "$id": "#/properties/networkPolicy/properties/policyTypes",
                    "type": "array",
                    "title": "Policy Type",
                    "description": "Specify the policy type.",
					"additionalItems": false,
					"items": {
                        "$id": "#/properties/networkPolicy/properties/policyTypes/items",
                        "type": "string"
                    }
                },
                "ingress": {
                    "$id": "#/properties/networkPolicy/properties/ingress",
                    "type": "array",
                    "title": "Ingress Configure",
                    "description": "Specify the ingress configuration",
                    "items": {
                        "$id": "#/properties/networkPolicy/properties/ingress/items",
                        "type": "object",
                        "additionalItems": true
                    }
                },
                "egress": {
					"$id": "#/properties/networkPolicy/properties/egress",
					"type": "array",
					"title": "Egress Configure",
					"description": "Specify the egress configuration",
					"items": {
						"$id": "#/properties/networkPolicy/properties/egress/items",
						"type": "object",
						"additionalItems": true
					}
				}
			}
		}
     },
	 "additionalProperties": true
 }